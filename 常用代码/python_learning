file I/O  systerm calls
string、list、tuple、bytes   built-in sequence:can be indexed and sliced
'xxx{n}xxx'.format()  print('The sum of 1 +2 is {0}').format(1+2)
print('%(language)s has %(number)03d quote types'%{'language':"Python","number":2})
f'Results of the {year} {event}'
f'{variable or literal values}' = '{variable or literal values}'.format()
dict getitem()  {'':344,'':456} print()
more control flow

list(range(10))
sum(range(10))

a,b = 0,1
while a <1000:
   print(a)
   a,b = b,a+b

if x<0:
  x=0
  print('Negative changed to zero')
elif x == 0:
  print('Zeros')
else:
  print('More')

activate_users = {}
for user,status in users.copy().items():
  if status = 'inactivate':
    del users[user]

for user,status in users.copy().items():
   if status == 'activate':
      activate_users[user] = status

a = ['Mary', 'had', 'a', 'little', 'lamb']
for i in range(len(a)):
    print(i,a[i])

# is equal to this
for i,ele in enumrate(a):
    print(i,ele)

# it could be called like this and of course it would print
lambda x:x+n
list.pop([i]) list.append(x)

# list comprehensions
squares = []
for x in range(10):
    squares.append(x**2)
squares

squares = [x**2 for x in range(10)]
[(x,y) for x in [1,2,3] for y in [3,1,4] if x!=y]
# which is equal to...
combs = []
for x in range(3):
   for y in [3,1,4]:
       if x!= y:
            combs.append((x,y))
vec = [-4, -2, 0, 2, 4]
[x*2 for x in vec]  [x for x in vec if x>=0]

# apply a function to all the element
[func(x) for x in vec] [abs(x) for x in vec]

# call a method on each element
freshfruit = ['  banana', '  loganberry ', 'passion fruit  ']
[x.strip() for x in freshfruit]

# create a list of 2-tuple
[(x,x*2) for x in range(6)]

# flatten a list using a listcomp with two 'for'
vec = [[1,2,3],[4,5,6],[7,8,9]]
[num for elem in vec for num in elem ]

matrix = [
...     [1, 2, 3, 4],
...     [5, 6, 7, 8],
...     [9, 10, 11, 12],
... ]

# transpose rows and columns
[[row[i] for row in matrix] for i in range(4)] # which is equal to
transposed = []
for i in range(4)：
    transpose.append([row[i] for row in matrix])

# looping through a dictionaries
knights = {'gallahad': 'the pure', 'robin': 'the brave'}
for k,v in knights.items():
    print(k,v)

# looping through a sequence
for i,v in enumerate(['tic','tac','toe']):
    print(i,v)    
