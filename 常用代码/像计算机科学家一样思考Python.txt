###带课本 记笔记 分析代码 做练习###
所有编程语言都会涉及到的基本指令：
1、输入
2、输出
3、数学
4、条件执行
5、重复

语句是一个命令或动作的一段代码，如赋值语句和打印语句

计算机科学家思维，即是问题求解思维，编程就是训练这种技能
问题求解包含，发现问题、思考解决方案、准确表达方案

编程语言是一种形式语言，是计算过程表达，是一系列指令集合
形式语言有严格的语法规则
语法规则有两种，一种是记号，一种是结构

变量是指向一个值的名称
语法规则 语法结构

操作符（+-*/**） 字符串 数值 类型（type）
正则表达式  @[]#() 1-9a-zA-Z
字符串不能进行数据操作，例如'2'-'1'
+和*例外，代表着拼接与重复

形式语言很紧凑，弄清它在做什么、为什么这么做
找出记号（token）和解析结构
注释中，给出的内容要是代码中看不到的信息

程序中常见的3中错误：语法错误、运行错误、语义错误

函数是一系列语句的组合，用于进行某种计算
看起来像数字的字符串
模块>函数>语句

程序设计语言，最实用特性为，各种小的构建块组合起来
在任何可以用值的地方，都可以用表达式替代（值、变量、操作符）

函数定义先于调用
函数体里面语句不会立即运行，直到调用了它
定义函数、调用函数、访问函数、运行函数

计算机执行流程，总是从第一行先开始
按照语句，从上往下，逐一执行
遇到函数调用，从函数体第一行运行

形参：parameter  实参：argument
赋值：assignment   #将值赋给变量的操作
变量：variables
函数体中的变量使用之后会被销毁

栈图是用来追踪变量在哪些地方使用
符合后进先出原则
None和字符串'None'并不一样，None有自己独特的类型

画网格图的搭建思路：
def print_beam():
   print("+----",end=" ")

def print_beams():
   do_twice(print_beam)
   print("+")

def print_post():
   print("|    ",end=" ")

def print_posts():
  do_twice(print_post)
  print("|")

def print_row():
  print_beams()
  do_four(print_posts)

def grid():
  do_twice(print_row)
  print_beams()

封装、泛化、通用、接口、重构
封装：用函数包裹一段代码，避免重复
接口：如何使用函数的概要说明，完成调用者所想 包含信息：参数、作用、功能、返回值
重构：重新组织程序，提高代码复用

if表达式，根据不同状态执行不同代码
// 取整数   %取余数，=0表明可以整除

布尔表达式 5==7
关系操作符 <> == !=
逻辑操作符 and or not

条件执行，给予了改变程序行为的能力
表达式一定生成值，语句执行操作（赋值、循环、条件）

递归：函数自己调用自己
